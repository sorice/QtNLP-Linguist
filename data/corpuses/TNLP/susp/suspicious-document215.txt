Pruebas de software. Las pruebas de software (en inglés software testing) son las investigaciones empíricas y técnicas cuyo objetivo es proporcionar información objetiva e independiente sobre la calidad del producto a la parte interesada o stakeholder. Es una actividad más en el proceso de control de calidad. Historia. El objetivo de las pruebas es presentar información sobre la calidad del producto a las personas responsables de este. Teniendo esta afirmación en mente, la información que puede ser requerida es de lo más variada. Esto hace que el proceso de testing sea completamente dependiente del contexto1 en el que se desarrolla. A pesar de lo que muchos promueven, no existen las "mejores prácticas" como tal. Toda práctica puede ser ideal para una situación pero completamente inútil o incluso perjudicial en otra.Por esto, las actividades, técnicas, documentación, enfoques y demás elementos que condicionarán las pruebas a realizar, deben ser seleccionadas y utilizadas de la manera más eficiente según contexto del proyecto.Pruebas estáticasSon el tipo de pruebas que se realizan sin ejecutar el código de la aplicación.Puede referirse a la revisión de documentos, ya que no se hace una ejecución de código. Esto se debe a que se pueden realizar "pruebas de escritorio" con el objetivo de seguir los flujos de la aplicación.Pruebas dinámicasTodas aquellas pruebas que para su ejecución requieren la ejecución de la aplicación.Las pruebas dinámicas permiten el uso de técnicas de caja negra y caja blanca con mayor amplitud. Debido a la naturaleza dinámica de la ejecución de pruebas es posible medir con mayor precisión el comportamiento de la aplicación desarrollada.Tipos de pruebasHay todo tipo de pruebas, pero nos centraremos en tres de ellas:Pruebas de CompatibilidadSe comprueba el funcionamiento del software desarrollado en muchas plataformas: sistemas operativos, navegadores, redes, hardware...Pruebas de regresiónse evalúa el correcto funcionamiento del software desarrollado frente a evoluciones o cambios funcionales.Pruebas de IntegraciónSe centra principalmente en las comunicaciones y las conexiones entre los diferentes módulos del software desarrollado o con terceros (Publicidad, pasarelas de pago, etc.)Tipos de pruebas por su ejecución- Pruebas manuales- Pruebas automáticasEnfoques de pruebas o approaches- Scripted Testing- Exploratory Testing- Pruebas de Caja blanca- Pruebas de Caja negra- Testing aleatorio2Niveles de pruebas- Pruebas unitarias- Pruebas de Integración- Pruebas de sistema- Pruebas de aceptaciónPruebas funcionales- Pruebas funcionales- Pruebas de humo- Pruebas de regresión- Pruebas de aceptación- Alpha testing- Beta testingPruebas no funcionales- Pruebas no funcionales- Pruebas de seguridad- Pruebas de usabilidad- Pruebas de rendimiento- Pruebas de internacionalización y localización- Pruebas de escalabilidad- Pruebas de mantenibilidad- Pruebas de instalabilidad- Pruebas de portabilidadReferencias- http://context-driven-testing.com/- Barrientos, Pablo Andrés (25 de abril de 2014). Enfoque para pruebas de unidad basado en la generación aleatoria de objetos. p. 101. Consultado el 28 de abril de 2014.
